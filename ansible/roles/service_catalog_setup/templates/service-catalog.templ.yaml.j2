apiVersion: v1
kind: Template
metadata:
  name: service-catalog
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: apiserver
    name: apiserver
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: apiserver
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: apiserver
      spec:
        containers:
        - args:
          - --storage-type
          - etcd
          - --secure-port
          - "6443"
          - --insecure-bind-address
          - 0.0.0.0
          - --insecure-port
          - "8081"
          - --etcd-servers
          - http://localhost:2379
          - -v
          - "10"
          - --cors-allowed-origins
          - ${CORS_ALLOWED_ORIGIN}
          image: {{ svc_cat_apiserver_tag }}
          imagePullPolicy: Never
          name: apiserver
          ports:
          - containerPort: 6443
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/run/kubernetes-service-catalog
            name: apiserver-ssl
            readOnly: true
        - env:
          - name: ETCD_DATA_DIR
            value: /data-dir
          image: quay.io/coreos/etcd:latest
          imagePullPolicy: Always
          name: etcd
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data-dir
            name: data-dir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: apiserver-ssl
          secret:
            defaultMode: 420
            secretName: apiserver-ssl
            items:
            - key: tls.crt
              path: apiserver.crt
            - key: tls.key
              path: apiserver.key
        - emptyDir: {}
          name: data-dir
- apiVersion: v1
  kind: Service
  metadata:
    name: apiserver
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: 'apiserver-ssl'
  spec:
    ports:
    - name: insecure
      port: 80
      protocol: TCP
      targetPort: 8081
    - name: secure
      port: 6443
      protocol: TCP
      targetPort: 6443
    selector:
      app: apiserver
    sessionAffinity: None
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: controller-manager
    name: controller-manager
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: controller-manager
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: controller-manager
      spec:
        containers:
        - args:
          - -v
          - "5"
          - --service-catalog-api-server-url
          - http://$(APISERVER_SERVICE_HOST):$(APISERVER_SERVICE_PORT)
          image: {{ svc_cat_controller_mgr_tag }}
          imagePullPolicy: Never
          name: controller-manager
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/service-catalog-ssl
            name: service-catalog-ssl
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: service-catalog-ssl
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: apiserver.crt
            secretName: apiserver-ssl
- apiVersion: v1
  kind: Service
  metadata:
    name: controller-manager
  spec:
    ports:
    - port: 6443
      protocol: TCP
      targetPort: 6443
    selector:
      app: controller-manager
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: apiserver
  spec:
    port:
      targetPort: secure
    tls:
      termination: passthrough
    to:
      kind: Service
      name: apiserver
      weight: 100
    wildcardPolicy: None
parameters:
- description: CORS allowed origin for the API server, if you need to specify multiple modify the Deployment after creation
  displayName: CORS Allowed Origin
  name: CORS_ALLOWED_ORIGIN
  required: true
  value: localhost:9000
